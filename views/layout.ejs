<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Information Management</title>
    <link rel="stylesheet" href="/styles.css"> <!-- Link to your CSS -->
    <style>
        /* Add styles for the logo */
        .logo {
            position: absolute;
            top: 20px; /* Adjust as needed */
            right: 20px; /* Adjust as needed */
            width: 100px; /* Adjust size as needed */
            height: auto; /* Maintain aspect ratio */
        }
    </style>
    <img src="/logo.png" alt="Logo" class="logo">
</head>
<body>
    <h1>Student Information Management</h1>
    <a href="/logout" id="logoutButton">Logout</a> 

    <div>
        <h2>Add Student</h2>
        <form id="addStudentForm" onsubmit="addStudent(event)">
            <input type="text" id="newName" placeholder="Name" required>
            <input type="text" id="newStudentId" placeholder="Student ID" required>
            <input type="text" id="newCourse" placeholder="Course" required>
            <button type="submit">Add Student</button>
        </form>
    </div>

    <div>
        <h2>Filter Students</h2>
        <input type="text" id="searchInput" placeholder="Search by name">
        <button onclick="filterStudents()">Filter</button>
    </div>

    <div>
        <h2>Student List</h2>
        <table id="studentTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Student ID</th>
                    <th>Course</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% students.forEach(student => { %>
                    <tr id="student-<%= student._id %>">
                        <td><%= student.name %></td>
                        <td><%= student.studentId %></td>
                        <td><%= student.course %></td>
                        <td>
                            <button onclick="editStudent('<%= student._id %>')">Edit</button>
                            <button onclick="deleteStudent('<%= student._id %>')">Delete</button>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>

    <script>
        function addStudent(event) {
            event.preventDefault(); // Prevent default form submission
            const newName = document.getElementById('newName').value;
            const newStudentId = document.getElementById('newStudentId').value;
            const newCourse = document.getElementById('newCourse').value;

            fetch('/api/students/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: newName,
                    studentId: newStudentId,
                    course: newCourse
                })
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Failed to add student');
            })
            .then(student => {
                const tableBody = document.querySelector('#studentTable tbody');
                const row = document.createElement('tr');
                row.id = `student-${student._id}`;
                row.innerHTML = `
                    <td>${student.name}</td>
                    <td>${student.studentId}</td>
                    <td>${student.course}</td>
                    <td>
                        <button onclick="editStudent('${student._id}')">Edit</button>
                        <button onclick="deleteStudent('${student._id}')">Delete</button>
                    </td>
                `;
                tableBody.appendChild(row);
                document.getElementById('addStudentForm').reset(); // Clear form
            })
            .catch(error => console.error('Error adding student:', error));
        }

        function filterStudents() {
            const query = document.getElementById('searchInput').value;
            fetch(`/api/students?search=${query}`)
                .then(response => response.json())
                .then(data => {
                    const tableBody = document.querySelector('#studentTable tbody');
                    tableBody.innerHTML = ''; // Clear existing rows
                    data.forEach(student => {
                        const row = document.createElement('tr');
                        row.id = `student-${student._id}`;
                        row.innerHTML = `
                            <td>${student.name}</td>
                            <td>${student.studentId}</td>
                            <td>${student.course}</td>
                            <td>
                                <button onclick="editStudent('${student._id}')">Edit</button>
                                <button onclick="deleteStudent('${student._id}')">Delete</button>
                            </td>
                        `;
                        tableBody.appendChild(row);
                    });
                })
                .catch(error => console.error('Error fetching students:', error));
        }

        function editStudent(studentId) {
            const newName = prompt("Enter new name:");
            const newStudentId = prompt("Enter new Student ID:");
            const newCourse = prompt("Enter new course:");

            if (newName && newStudentId && newCourse) {
                fetch(`/api/students/update/${studentId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        name: newName,
                        studentId: newStudentId,
                        course: newCourse
                    })
                })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    }
                    throw new Error('Failed to update student');
                })
                .then(updatedStudent => {
                    const row = document.getElementById(`student-${updatedStudent._id}`);
                    row.innerHTML = `
                        <td>${updatedStudent.name}</td>
                        <td>${updatedStudent.studentId}</td>
                        <td>${updatedStudent.course}</td>
                        <td>
                            <button onclick="editStudent('${updatedStudent._id}')">Edit</button>
                            <button onclick="deleteStudent('${updatedStudent._id}')">Delete</button>
                        </td>
                    `;
                })
                .catch(error => console.error('Error updating student:', error));
            }
        }

        function deleteStudent(studentId) {
            if (confirm("Are you sure you want to delete this student?")) {
                fetch(`/api/students/delete/${studentId}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        document.getElementById(`student-${studentId}`).remove(); // Remove the row from the table
                    } else {
                        throw new Error('Failed to delete student');
                    }
                })
                .catch(error => console.error('Error deleting student:', error));
            }
        }
    </script>
</body>
</html>
